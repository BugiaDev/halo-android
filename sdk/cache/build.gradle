apply plugin: 'com.android.library'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'grill'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode grill.CI.getCommitRevision()
        versionName "${rootProject.ext.haloVersion}"
    }
}

dependencies {
    compile "com.bluelinelabs:logansquare:1.3.7"
    compile "io.paperdb:paperdb:1.5"
    compile "com.android.support:support-annotations:${rootProject.ext.appcompatVersion}"
    testCompile "org.robolectric:robolectric:3.1-rc1"
    testCompile "org.mockito:mockito-core:1.10.19"
    testCompile 'junit:junit:4.12'
    testApt 'com.bluelinelabs:logansquare-compiler:1.3.6'
}

/**
 * Distribution
 */
group = rootProject.ext.haloGroup
version = rootProject.ext.haloVersion
description = 'Offline cache and indexer definition available for HALO.'

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
}

task javadocJar(type: Jar, dependsOn: "documentationRelease") {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

grill {
//    distribute {
//        libName 'HALO Cache'
//        libDescription 'Offline cache and indexer definition available for HALO.'
//        libDevId "halo-mobgen"
//        libDevName "MOBGEN"
//        libDevEmail "halo@mobgen.com"
//        libSiteUrl "https://halo.mobgen.com"
//        libGitUrl "https://bitbucket.org/mobgen/halo-android"
//        bintrayRepoName "HALO"
//        bintrayUser "${rootProject.ext.jcenterUser}"
//        bintrayKey "${rootProject.ext.jcenterKey}"
//        bintrayMavenCentralUser "${rootProject.ext.sonatypeUser}"
//        bintrayMavenCentralPassword "${rootProject.ext.sonatypePassword}"
//        bintrayArtifactJavadoc project.tasks.getByName("javadocJar")
//        bintrayArtifactSources project.tasks.getByName("sourcesJar")
//        bintrayMavenSync project.hasProperty("sync")
//    }
//    documentation {
//        templateDir "/../docs/template"
//    }
//    coverage {}
}
